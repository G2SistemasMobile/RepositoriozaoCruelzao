/*									Opções de view disponíveis:
									[1]	
									Utiliza:
												- Utiliza TODOS os itens da tabela de 'Produtos'
												- O campo 'STOCK' (Qtd) vem de Almoxlojaitens
												- O campo 'PRICE' (Preço) vem de Produtos
												- O campo 'PROMOTIONAL_PRICE' (Preço Promocional) vem de Produtos


									[2]
									Utiliza:
												- Utiliza APENAS os itens cadastrados na tabela 'INTEGRACAO_ECOMMERCE_PRODUTOS';
												- O campo 'STOCK' (Qtd) vem de V_PRODESTOQUE_CONSULTA
												- O campo 'PRICE' (Preço) vem de TABPRECOITEM
												- O campo 'PROMOTIONAL_PRICE' (Preço Promocional) vem de INTEGRACAO_ECOMMERCE_PRODUTOS
												- A tabela 'PRODUTOS_COLECOES' é utilizada para diferenciar produtos de diferentes e-commerce, pois o cliente utiliza Tray/LI;
												
												
									[3]
									Utiliza:
												- Utiliza os itens da tabela de 'Produtos' separados por tipo de produto
												- O campo 'STOCK' (Qtd) vem de Almoxlojaitens
												- O campo 'PRICE' (Preço) vem de Produtos
												- O campo 'PROMOTIONAL_PRICE' (Preço Promocional) vem de Produtos */




-- [1]
CREATE VIEW [dbo].[V_TR_PRODUTOS] as
   (SELECT (SELECT VALOR FROM CONFIGURACAO WHERE PARAMETRO = 31601) AS IDG2,
			P.PRODUTOID ID, P.CODIGOCLIENTE EAN, P.DESCRICAO PROD_NAME, P.CLAFISCAL NCM, 
			P.PRECOVENDA PRICE, P.PRECOCOMPRA COST_PRICE, 
			CASE WHEN (P.PESO IS NULL OR P.PESO = 0) THEN 100
			ELSE CEILING(P.PESO * 1000)
			END AS PROD_WEIGHT,
			CASE WHEN (P.COMPRIMENTO IS NULL OR P.COMPRIMENTO = 0) THEN 10
			ELSE CEILING(P.COMPRIMENTO * 100)
			END AS PROD_LENGTH,
			CASE WHEN (P.LARGURA IS NULL OR P.LARGURA = 0) THEN 10
			ELSE CEILING(P.LARGURA * 100)
			END AS PROD_WIDTH,
			CASE WHEN (P.ALTURA IS NULL OR P.ALTURA = 0) THEN 10
			ELSE CEILING(P.ALTURA * 100)
			END AS PROD_HEIGHT,
			A.QUANTIDADE STOCK,
			CASE WHEN (P.TIPOPROD > 0 AND P.TIPOPRODID_FILHO > 0 AND P.TIPOPROD_NETO > 0) THEN TPN.TIPOPROD_TRAY
				 WHEN (P.TIPOPROD > 0 AND P.TIPOPRODID_FILHO > 0 AND (P.TIPOPROD_NETO <= 0 OR P.TIPOPROD_NETO IS NULL)) THEN TPF.TIPOPROD_TRAY
				 WHEN (P.TIPOPROD > 0 AND (P.TIPOPRODID_FILHO = 0 OR P.TIPOPRODID_FILHO IS NULL) AND (P.TIPOPROD_NETO = 0 OR P.TIPOPROD_NETO IS NULL)) THEN TP.TIPOPROD_TRAY
			END AS CATEGORY_ID,
			P.PRODUTOID REFERENCE, P.TIPOPROD, P.TIPOPRODID_FILHO, P.TIPOPROD_NETO, TP.DESCRICAO AS TIPOPROD_DESCRICAO,
			TPF.DESCRICAO AS TIPOPROD_FILHO_DESCRICAO, TPN.DESCRICAO AS TIPOPROD_NETO_DESCRICAO, IMG.PATH AS picture_source_1,
			CASE WHEN (M.MARCAID = 0 OR M.MARCAID IS NULL) THEN 'Marca Padrão' 
			ELSE M.DESCRICAO
			END brand,
			CAST(P.PRECO_PROMOCAO_DE AS Date)  as start_promotion,
			CAST(P.PRECO_PROMOCAO_ATE AS Date)  as end_promotion,
			P.PRECO_PROMOCAO AS promotional_price,	
			CASE WHEN (P.ATIVO IS NOT NULL AND (P.ATIVO = 'S' OR P.ATIVO = 's')) THEN 'S'
			ELSE 'N'
			END AS ATIVO
			FROM  ALMOXLOJAITENS A,
				  REGISTROS_SINCRONIZAR B,
				  PRODUTOS P
				  LEFT JOIN V_TR_CATEGORIAS_PAI AS TP ON P.TIPOPROD = TP.TIPOPROD
				  LEFT JOIN V_TR_CATEGORIAS_FILHO AS TPF ON (P.TIPOPRODID_FILHO = TPF.TIPOPROD_FILHO AND P.TIPOPROD = TPF.TIPOPROD)
				  LEFT JOIN V_TR_CATEGORIAS_NETO AS TPN ON (P.TIPOPROD_NETO = TPN.TIPOPROD_NETO AND P.TIPOPROD = TPN.TIPOPROD AND TPF.TIPOPROD_FILHO = TPN.TIPOPROD_FILHO)
				  LEFT JOIN PRODUTOS_IMAGENS AS IMG ON P.PRODUTOID = IMG.PRODUTOID
				  LEFT JOIN MARCA AS M ON P.MARCAID = M.MARCAID
			WHERE P.PRODUTOID = A.PRODUTOID
				  AND P.PRODUTOID > 0
				  AND A.PRODUTOID = B.PRODUTOID
				  AND B.DATAENTRADA >= (SELECT DATA_ULTIMA_SINCRONIZACAO FROM INTEGRACAO_ECOMMERCE WHERE INTEGRACAOID = 30)
				  AND P.TIPOPROD IN (SELECT TIPOPROD FROM TIPOPRODUTO)
			GROUP BY P.PRODUTOID, P.CODIGOCLIENTE, P.DESCRICAO, P.CLAFISCAL, P.PRECOCOMPRA,
		      	  P.PESO, P.COMPRIMENTO, P.LARGURA, P.ALTURA, P.TIPOPROD, P.TIPOPRODID_FILHO, P.TIPOPROD_NETO,
				  TPF.TIPOPROD_TRAY, TP.DESCRICAO, TPF.DESCRICAO, TPN.DESCRICAO, IMG.PATH, TPN.TIPOPROD_FILHO, TPN.TIPOPROD,
				  TPN.TIPOPROD_NETO, TP.TIPOPROD_TRAY, TPN.TIPOPROD_TRAY, M.MARCAID, M.DESCRICAO, P.PRECO_PROMOCAO_DE,
				  P.PRECO_PROMOCAO_ATE, P.ATIVO, P.PRECOVENDA, A.QUANTIDADE, P.PRECO_PROMOCAO)

-- [2]
CREATE VIEW [dbo].[V_TR_PRODUTOS] as
   (SELECT (SELECT VALOR FROM CONFIGURACAO WHERE PARAMETRO = 31601) AS IDG2,
			P.PRODUTOID ID, P.CODIGOCLIENTE EAN, P.DESCRICAO PROD_NAME, P.CLAFISCAL NCM, 
			TPI.PRECOVENDA PRICE, TPI.PRECOCOMPRA COST_PRICE, 
			CASE WHEN (P.PESO IS NULL OR P.PESO = 0) THEN 100
			ELSE CEILING(P.PESO * 1000)
			END AS PROD_WEIGHT,
			CASE WHEN (P.COMPRIMENTO IS NULL OR P.COMPRIMENTO = 0) THEN 10
			ELSE CEILING(P.COMPRIMENTO * 100)
			END AS PROD_LENGTH,
			CASE WHEN (P.LARGURA IS NULL OR P.LARGURA = 0) THEN 10
			ELSE CEILING(P.LARGURA * 100)
			END AS PROD_WIDTH,
			CASE WHEN (P.ALTURA IS NULL OR P.ALTURA = 0) THEN 10
			ELSE CEILING(P.ALTURA * 100)
			END AS PROD_HEIGHT,
			A.QUANTIDADE STOCK,
			CASE WHEN (P.TIPOPROD > 0 AND P.TIPOPRODID_FILHO > 0 AND P.TIPOPROD_NETO > 0) THEN TPN.TIPOPROD_TRAY
				 WHEN (P.TIPOPROD > 0 AND P.TIPOPRODID_FILHO > 0 AND (P.TIPOPROD_NETO <= 0 OR P.TIPOPROD_NETO IS NULL)) THEN TPF.TIPOPROD_TRAY
				 WHEN (P.TIPOPROD > 0 AND (P.TIPOPRODID_FILHO = 0 OR P.TIPOPRODID_FILHO IS NULL) AND (P.TIPOPROD_NETO = 0 OR P.TIPOPROD_NETO IS NULL)) THEN TP.TIPOPROD_TRAY
			END AS CATEGORY_ID,
			P.PRODUTOID REFERENCE, P.TIPOPROD, P.TIPOPRODID_FILHO, P.TIPOPROD_NETO, TP.DESCRICAO AS TIPOPROD_DESCRICAO,
			TPF.DESCRICAO AS TIPOPROD_FILHO_DESCRICAO, TPN.DESCRICAO AS TIPOPROD_NETO_DESCRICAO, IMG.PATH AS picture_source_1,
			CASE WHEN (M.MARCAID = 0 OR M.MARCAID IS NULL) THEN 'Marca Padrão' 
			ELSE M.DESCRICAO
			END brand,
			CAST(P.PRECO_PROMOCAO_DE AS Date)  as start_promotion,
			CAST(P.PRECO_PROMOCAO_ATE AS Date)  as end_promotion,
			P.PRECO_PROMOCAO AS promotional_price,	
			CASE WHEN (P.ATIVO IS NOT NULL AND (P.ATIVO = 'S' OR P.ATIVO = 's')) THEN 'S'
			ELSE 'N'
			END AS ATIVO
			FROM  ALMOXLOJAITENS A,
				  REGISTROS_SINCRONIZAR B,
				  INTEGRACAO_ECOMMERCE_PRODUTOS I,
				  TABPRECOITEM TPI,
				  PRODUTOS P
				  LEFT JOIN V_TR_CATEGORIAS_PAI AS TP ON P.TIPOPROD = TP.TIPOPROD
				  LEFT JOIN V_TR_CATEGORIAS_FILHO AS TPF ON (P.TIPOPRODID_FILHO = TPF.TIPOPROD_FILHO AND P.TIPOPROD = TPF.TIPOPROD)
				  LEFT JOIN V_TR_CATEGORIAS_NETO AS TPN ON (P.TIPOPROD_NETO = TPN.TIPOPROD_NETO AND P.TIPOPROD = TPN.TIPOPROD AND TPF.TIPOPROD_FILHO = TPN.TIPOPROD_FILHO)
				  LEFT JOIN PRODUTOS_IMAGENS AS IMG ON P.PRODUTOID = IMG.PRODUTOID
				  LEFT JOIN MARCA AS M ON P.MARCAID = M.MARCAID
			WHERE     P.PRODUTOID = A.PRODUTOID
				  AND P.PRODUTOID = I.PRODUTOID
				  AND P.PRODUTOID = TPI.PRODUTOID
				  AND P.PRODUTOID = B.PRODUTOID
				  AND A.ENTIDADEID_LOJA = I.ENTIDADEID_LOJA
				  AND A.ALMOXID = I.ALMOXID
				  AND I.INTEGRACAOID = 30
				  AND TPI.TABPRECOID = ?
				  AND P.PRODUTOID > ?
				  AND B.DATAENTRADA >= (SELECT DATA_ULTIMA_SINCRONIZACAO FROM INTEGRACAO_ECOMMERCE WHERE INTEGRACAOID = 30)
				  AND P.TIPOPROD IN (SELECT TIPOPROD FROM TIPOPRODUTO)
			GROUP BY P.PRODUTOID, P.CODIGOCLIENTE, P.DESCRICAO, P.CLAFISCAL, TPI.PRECOCOMPRA,
		      	  P.PESO, P.COMPRIMENTO, P.LARGURA, P.ALTURA, P.TIPOPROD, P.TIPOPRODID_FILHO, P.TIPOPROD_NETO,
				  TPF.TIPOPROD_TRAY, TP.DESCRICAO, TPF.DESCRICAO, TPN.DESCRICAO, IMG.PATH, TPN.TIPOPROD_FILHO, TPN.TIPOPROD,
				  TPN.TIPOPROD_NETO, TP.TIPOPROD_TRAY, TPN.TIPOPROD_TRAY, M.MARCAID, M.DESCRICAO, P.PRECO_PROMOCAO_DE,
				  P.PRECO_PROMOCAO_ATE, P.ATIVO, TPI.PRECOVENDA, A.QUANTIDADE, P.PRECO_PROMOCAO)

-- [3]
CREATE VIEW [dbo].[V_TR_PRODUTOS] as
   (SELECT (SELECT VALOR FROM CONFIGURACAO WHERE PARAMETRO = 31601) AS IDG2,
			P.PRODUTOID ID, P.CODIGOCLIENTE EAN, P.DESCRICAO PROD_NAME, P.CLAFISCAL NCM, 
			P.PRECOVENDA PRICE, P.PRECOCOMPRA COST_PRICE, 
			CASE WHEN (P.PESO IS NULL OR P.PESO = 0) THEN 100
			ELSE CEILING(P.PESO * 1000)
			END AS PROD_WEIGHT,
			CASE WHEN (P.COMPRIMENTO IS NULL OR P.COMPRIMENTO = 0) THEN 10
			ELSE CEILING(P.COMPRIMENTO * 100)
			END AS PROD_LENGTH,
			CASE WHEN (P.LARGURA IS NULL OR P.LARGURA = 0) THEN 10
			ELSE CEILING(P.LARGURA * 100)
			END AS PROD_WIDTH,
			CASE WHEN (P.ALTURA IS NULL OR P.ALTURA = 0) THEN 10
			ELSE CEILING(P.ALTURA * 100)
			END AS PROD_HEIGHT,
			round(A.QUANTIDADE/2, 0, 1) STOCK,
			CASE WHEN (P.TIPOPROD > 0 AND P.TIPOPRODID_FILHO > 0 AND P.TIPOPROD_NETO > 0) THEN TPN.TIPOPROD_TRAY
				 WHEN (P.TIPOPROD > 0 AND P.TIPOPRODID_FILHO > 0 AND (P.TIPOPROD_NETO <= 0 OR P.TIPOPROD_NETO IS NULL)) THEN TPF.TIPOPROD_TRAY
				 WHEN (P.TIPOPROD > 0 AND (P.TIPOPRODID_FILHO = 0 OR P.TIPOPRODID_FILHO IS NULL) AND (P.TIPOPROD_NETO = 0 OR P.TIPOPROD_NETO IS NULL)) THEN TP.TIPOPROD_TRAY
			END AS CATEGORY_ID,
			P.PRODUTOID REFERENCE, P.TIPOPROD, P.TIPOPRODID_FILHO, P.TIPOPROD_NETO, TP.DESCRICAO AS TIPOPROD_DESCRICAO,
			TPF.DESCRICAO AS TIPOPROD_FILHO_DESCRICAO, TPN.DESCRICAO AS TIPOPROD_NETO_DESCRICAO, IMG.PATH AS picture_source_1,
			CASE WHEN (M.MARCAID = 0 OR M.MARCAID IS NULL) THEN 'Marca Padrão' 
			ELSE M.DESCRICAO
			END brand,
			CAST(P.PRECO_PROMOCAO_DE AS Date)  as start_promotion,
			CAST(P.PRECO_PROMOCAO_ATE AS Date)  as end_promotion,
			P.PRECO_PROMOCAO AS promotional_price,	
			CASE WHEN (P.ATIVO IS NOT NULL AND (P.ATIVO = 'S' OR P.ATIVO = 's')) THEN 'S'
			ELSE 'N'
			END AS ATIVO
			FROM  ALMOXLOJAITENS A,
				  REGISTROS_SINCRONIZAR B,
				  PRODUTOS P
				  LEFT JOIN V_TR_CATEGORIAS_PAI AS TP ON P.TIPOPROD = TP.TIPOPROD
				  LEFT JOIN V_TR_CATEGORIAS_FILHO AS TPF ON (P.TIPOPRODID_FILHO = TPF.TIPOPROD_FILHO AND P.TIPOPROD = TPF.TIPOPROD)
				  LEFT JOIN V_TR_CATEGORIAS_NETO AS TPN ON (P.TIPOPROD_NETO = TPN.TIPOPROD_NETO AND P.TIPOPROD = TPN.TIPOPROD AND TPF.TIPOPROD_FILHO = TPN.TIPOPROD_FILHO)
				  LEFT JOIN PRODUTOS_IMAGENS AS IMG ON P.PRODUTOID = IMG.PRODUTOID
				  LEFT JOIN MARCA AS M ON P.MARCAID = M.MARCAID
			WHERE P.PRODUTOID = A.PRODUTOID
				  AND P.PRODUTOID > 0
				  AND P.TIPOPROD = 27
				  AND A.ALMOXID = 0
				  AND A.ENTIDADEID_LOJA = 0
				  AND A.PRODUTOID = B.PRODUTOID
				  AND P.TIPOPROD IN (SELECT TIPOPROD FROM TIPOPRODUTO)
			GROUP BY P.PRODUTOID, P.CODIGOCLIENTE, P.DESCRICAO, P.CLAFISCAL, P.PRECOCOMPRA,
		      	  P.PESO, P.COMPRIMENTO, P.LARGURA, P.ALTURA, P.TIPOPROD, P.TIPOPRODID_FILHO, P.TIPOPROD_NETO,
				  TPF.TIPOPROD_TRAY, TP.DESCRICAO, TPF.DESCRICAO, TPN.DESCRICAO, IMG.PATH, TPN.TIPOPROD_FILHO, TPN.TIPOPROD,
				  TPN.TIPOPROD_NETO, TP.TIPOPROD_TRAY, TPN.TIPOPROD_TRAY, M.MARCAID, M.DESCRICAO, P.PRECO_PROMOCAO_DE,
				  P.PRECO_PROMOCAO_ATE, P.ATIVO, P.PRECOVENDA, A.QUANTIDADE, P.PRECO_PROMOCAO)
